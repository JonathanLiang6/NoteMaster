<Page x:Class="NoteMaster.Views.Pages.TodoPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:NoteMaster.Views.Pages"
      xmlns:viewModels="clr-namespace:NoteMaster.ViewModels"
      xmlns:models="clr-namespace:NoteMaster.Models"
      mc:Ignorable="d"
      Title="TodoPage"
      d:DesignHeight="600" d:DesignWidth="800"
      FontFamily="Segoe UI"
      UseLayoutRounding="True"
      SnapsToDevicePixels="True">

    <Page.DataContext>
        <viewModels:TodoPageViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

        <Style TargetType="TextBlock" x:Key="PlaceholderTextBlockStyle">
            <Setter Property="Foreground" Value="#FF999999"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>

        <Style TargetType="TextBox" x:Key="InputTextBoxStyle">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="#FFF9F9F9"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#FF007ACC"/>
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="PrimaryButtonStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#FF007ACC" Offset="0"/>
                        <GradientStop Color="#FF005A9E" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#FF0091EA" Offset="0"/>
                                            <GradientStop Color="#FF007ACC" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFE0E0E0"/>
                                <Setter Property="Foreground" Value="#FF999999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="SecondaryButtonStyle" BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#FF6C757D" Offset="0"/>
                        <GradientStop Color="#FF5A6268" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#FF7A848B" Offset="0"/>
                                            <GradientStop Color="#FF686F74" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFE0E0E0"/>
                                <Setter Property="Foreground" Value="#FF999999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ActionButtonStyle" BasedOn="{StaticResource SecondaryButtonStyle}">
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <Style TargetType="Button" x:Key="DangerButtonStyle" BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#FFDC3545" Offset="0"/>
                        <GradientStop Color="#FFC82333" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#FFE44D5C" Offset="0"/>
                                            <GradientStop Color="#FFD33A4A" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#FFE0E0E0"/>
                                <Setter Property="Foreground" Value="#FF999999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,10,0"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style TargetType="DatePicker">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
            <Setter Property="Background" Value="#FFF9F9F9"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style TargetType="TextBox" x:Key="TimeInputTextBoxStyle" BasedOn="{StaticResource InputTextBoxStyle}">
            <Setter Property="Width" Value="60"/>
            <Setter Property="MaxLength" Value="5"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="ToolTip" Value="输入 HH:mm 格式的时间（如 14:30）"/>
        </Style>

        <Style TargetType="Border" x:Key="TodoItemBorderStyle">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,12"/>
            <Setter Property="BorderBrush" Value="#FFE0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFF5F7FA"/>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1.02" ScaleY="1.02"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <DropShadowEffect x:Key="DropShadowEffect" ShadowDepth="1" BlurRadius="5" Opacity="0.3" Color="Black"/>
    </Page.Resources>

    <Grid Background="#FFF5F7FA" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock Text="待办事项" FontSize="28" FontWeight="SemiBold" Margin="20,10,20,20" Foreground="#FF333333"/>

        <Border Grid.Row="1" Background="White" CornerRadius="8" Padding="15" Margin="20,0,20,20" Effect="{StaticResource DropShadowEffect}">
            <StackPanel Orientation="Vertical">
                <Grid Margin="0,0,0,10">
                    <TextBlock Text="添加新的待办事项...">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource PlaceholderTextBlockStyle}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=NewTodoContentTextBox, Path=Text}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=NewTodoContentTextBox, Path=Text}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox x:Name="NewTodoContentTextBox"
                             Text="{Binding NewTodoContent, UpdateSourceTrigger=PropertyChanged}"
                             KeyDown="TextBox_KeyDown"
                             Style="{StaticResource InputTextBoxStyle}"
                             MinHeight="40"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             MaxLength="500"
                             ToolTip="输入待办事项内容（最多500字）"/>
                </Grid>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                    <TextBlock Text="截止日期:" VerticalAlignment="Center" Margin="0,0,5,0" Foreground="#FF555555"/>
                    <DatePicker SelectedDate="{Binding NewTodoDueDate, Mode=TwoWay}" Width="150" ToolTip="设置截止日期，或作为提醒的基础日期"/>
                    <TextBlock Text="提醒时间 (HH:mm):" VerticalAlignment="Center" Margin="15,0,5,0" Foreground="#FF555555"/>
                    <TextBox Style="{StaticResource TimeInputTextBoxStyle}" Text="{Binding NewTodoReminderTimeString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                </StackPanel>

                <Button Content="添加待办"
                        Command="{Binding AddTodoCommand}"
                        Style="{StaticResource PrimaryButtonStyle}"
                        HorizontalAlignment="Left"
                        Padding="20,8"/>
            </StackPanel>
        </Border>

        <Border Grid.Row="2" Background="White" CornerRadius="8" Margin="20,0,20,20" Effect="{StaticResource DropShadowEffect}">
            <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="5">
                <ItemsControl ItemsSource="{Binding TodoItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:TodoItem}">
                            <Border Style="{StaticResource TodoItemBorderStyle}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox IsChecked="{Binding IsCompleted, Mode=TwoWay}" VerticalAlignment="Center"/>

                                    <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                        <TextBlock Text="{Binding Content}"
                                                   FontSize="15"
                                                   TextDecorations="{Binding DisplayTextDecorations}"
                                                   Foreground="{Binding DisplayTextColor}"
                                                   TextWrapping="Wrap"/>
                                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                            <TextBlock FontSize="12" Foreground="DarkGray"
                                                       Visibility="{Binding DueDate, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Run Text="截止: "/>
                                                <Run Text="{Binding DueDate, StringFormat='yyyy-MM-dd'}"/>
                                            </TextBlock>
                                            <TextBlock FontSize="12" Margin="10,0,0,0"
                                                       Visibility="{Binding IsReminderSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <Run Text="⏰ " Foreground="#FF007ACC" FontWeight="SemiBold"/>
                                                <Run Text="{Binding ReminderAt, StringFormat='HH:mm (yyyy-MM-dd)'}" Foreground="#FF007ACC" FontWeight="SemiBold"/>
                                            </TextBlock>
                                            <TextBlock FontSize="12" Foreground="#FF999999" Margin="10,0,0,0"
                                                       Visibility="{Binding IsReminderSet, ConverterParameter=Inverse, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                       Text="(无提醒)"
                                                       FontStyle="Italic" Opacity="0.8"/>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="提醒日期:" VerticalAlignment="Center" Margin="5,0,2,0" FontSize="12"/>
                                            <DatePicker SelectedDate="{Binding ReminderAt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Width="120" FontSize="12"
                                                        IsEnabled="{Binding IsCompleted, Converter={StaticResource InverseBooleanConverter}}"
                                                        ToolTip="设置或修改提醒日期（时间将为当天00:00，若需精确时间请清除后重新添加）"/>
                                            <Button Command="{Binding DataContext.SaveItemReminderChangeCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    CommandParameter="{Binding}"
                                                    Content="保存" ToolTip="保存对此提醒日期的更改"
                                                    Style="{StaticResource ActionButtonStyle}"
                                                    IsEnabled="{Binding IsCompleted, Converter={StaticResource InverseBooleanConverter}}"/>
                                            <Button Command="{Binding DataContext.ClearItemReminderCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                    CommandParameter="{Binding}"
                                                    Content="清除" ToolTip="清除此待办的提醒"
                                                    Style="{StaticResource ActionButtonStyle}" Background="#FFE0A800"
                                                    IsEnabled="{Binding IsCompleted, Converter={StaticResource InverseBooleanConverter}}"/>
                                        </StackPanel>

                                        <Button Command="{Binding DataContext.DeleteTodoCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                                                CommandParameter="{Binding}"
                                                Content="🗑️" FontSize="12" ToolTip="删除此待办事项"
                                                Style="{StaticResource DangerButtonStyle}" Margin="5,0,0,0" Padding="8,4"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Border>
    </Grid>
</Page>